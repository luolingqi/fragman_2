#!/usr/bin/perl -w
# Chi Ho Ngan
use strict; use Cwd;

print "RUN_MULTIPLE.PL START\n";

my ($cwd, $filename, @list, $line_list, @line_ism, $molename, $ism, @counter, $scalar, $counter_format);
my ($filetype, $chartype, $hydrogen, $formlchg);

$cwd      = cwd();

if (scalar @ARGV < 5){
	short_args(); die;
}

$filetype = shift (@ARGV);
$chartype = shift (@ARGV);
$hydrogen = shift (@ARGV);
$formlchg = shift (@ARGV);
$filename = shift (@ARGV);

open (COU,"<count1") || die "cannot open count1:$!\n"; chomp(@counter = <COU>); close COU;
$scalar = $counter[0] + 1;
open (OUT,">count2") || die "cannot save count2:$!\n"; print OUT "$scalar"    ; close OUT;
system "mv count2 count1";
$counter_format = sprintf("%04d", $counter[0]);

open (LIST , "<$filename") || die "cannot open $filename: $!\n";
chomp(@list = <LIST>); close LIST;

system "mkdir $counter_format";
chdir  "$cwd/$counter_format/";

if ($filetype eq "ism") {
	foreach $line_list(@list)
	{
		@line_ism = split(/\s+/, $line_list);
		if (scalar @line_ism != 2) {
			print "Check input file. Must be 3 letter/number followed by isomeric SMILES string\n"; next
		}
		
		$molename = $line_ism[0];
		$ism      = $line_ism[1];

		if (length($molename) != 3){
			print "small molecule '$molename' must be 3 letter/number; ism is $ism\n" ;
		}
		else {
			system "mkdir $molename";
			chdir  "$cwd/$counter_format/$molename/" || die "cannot change directory to: $cwd/$molename: $!\n";

			open (OUT, ">$molename.ism") || die "cannot write to $molename.ism: $!\n";
			print OUT "$ism\n"; close OUT;

			system "small_molecule_prepare.pl $molename.ism --filetype $filetype --chartype $chartype --hydrogen $hydrogen --formlchg $formlchg";

			chdir "$cwd/$counter_format/" || die "cannot change directory to: $cwd/: $!\n";
		}
	}
}
elsif ($filetype eq "pdb") {
	system "cp $cwd/$filename $cwd/$counter_format/";
	system "small_molecule_prepare.pl $filename --filetype $filetype --chartype $chartype --hydrogen $hydrogen --formlchg $formlchg";
}
else {
	die "Unrecognizable file type. Please re-try: $!\n";
}

system "tar cf $counter_format.tar *";

chdir "$cwd";

print "RUN_MULTIPLE.PL FINISH\n";
#==================================================================================================
sub short_args
{
        printf ("usage  :       $0 options filename\n");                                        # PDB file or Isomeric SMILES file
        printf ("argvs  :       --filetype ism ,pdb\n");
        printf ("               --chartype bcc ,rsp\n");
        printf ("               --hydrogen pre ,abs\n");                                        # pre: full hydrogen model; if abs is selected a
        printf ("               --formlchg integers\n");                                        # full hydrogen model will be generated by open-
        printf ("\n");                                                                          # babel, and the molecule has no formal charge/s
}                                                                                               # --formlchg: enter 0 if isomeric smiles are sub
                                                                                                # -mitted (isomeric SMILES should contain formal
                                                                                                # charges)
